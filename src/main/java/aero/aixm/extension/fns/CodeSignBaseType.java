//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.04 at 11:05:52 AM EST 
//


package aero.aixm.extension.fns;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CodeSignBaseType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CodeSignBaseType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="APRON"/>
 *     &lt;enumeration value="CARGO"/>
 *     &lt;enumeration value="CIVIL"/>
 *     &lt;enumeration value="FBO"/>
 *     &lt;enumeration value="FUEL"/>
 *     &lt;enumeration value="GUIDANCE"/>
 *     &lt;enumeration value="HOLD_INSTRUMENT_LANDING_SYSTEM"/>
 *     &lt;enumeration value="HOLD_RUNWAY_APPROACH"/>
 *     &lt;enumeration value="HOLD_RUNWAY_INTERSECTION"/>
 *     &lt;enumeration value="HOLD_TAXIWAY_RUNWAY"/>
 *     &lt;enumeration value="INFO"/>
 *     &lt;enumeration value="INSTRUMENT_LANDING_SYSTEM_CRITICAL"/>
 *     &lt;enumeration value="INTL"/>
 *     &lt;enumeration value="MIL"/>
 *     &lt;enumeration value="NO_ENTRY"/>
 *     &lt;enumeration value="OUTBOUND_DESTINATION"/>
 *     &lt;enumeration value="PAX"/>
 *     &lt;enumeration value="ROAD_STOP"/>
 *     &lt;enumeration value="ROAD_YIELD"/>
 *     &lt;enumeration value="RSA_RUNWAY_APPROACH"/>
 *     &lt;enumeration value="RUNWAY_EXIT"/>
 *     &lt;enumeration value="RUNWAY_LOCATION"/>
 *     &lt;enumeration value="RUNWAY_DISTANCE_REMAINING"/>
 *     &lt;enumeration value="TAXIWAY_DIRECTION"/>
 *     &lt;enumeration value="TAXIWAY_END"/>
 *     &lt;enumeration value="TAXIWAY_LOCATION"/>
 *     &lt;enumeration value="TERMINAL"/>
 *     &lt;enumeration value="TACAN_CHECKPOINT"/>
 *     &lt;enumeration value="OTHER:ALL"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CodeSignBaseType")
@XmlEnum
public enum CodeSignBaseType {

    APRON("APRON"),
    CARGO("CARGO"),
    CIVIL("CIVIL"),
    FBO("FBO"),
    FUEL("FUEL"),
    GUIDANCE("GUIDANCE"),
    HOLD_INSTRUMENT_LANDING_SYSTEM("HOLD_INSTRUMENT_LANDING_SYSTEM"),
    HOLD_RUNWAY_APPROACH("HOLD_RUNWAY_APPROACH"),
    HOLD_RUNWAY_INTERSECTION("HOLD_RUNWAY_INTERSECTION"),
    HOLD_TAXIWAY_RUNWAY("HOLD_TAXIWAY_RUNWAY"),
    INFO("INFO"),
    INSTRUMENT_LANDING_SYSTEM_CRITICAL("INSTRUMENT_LANDING_SYSTEM_CRITICAL"),
    INTL("INTL"),
    MIL("MIL"),
    NO_ENTRY("NO_ENTRY"),
    OUTBOUND_DESTINATION("OUTBOUND_DESTINATION"),
    PAX("PAX"),
    ROAD_STOP("ROAD_STOP"),
    ROAD_YIELD("ROAD_YIELD"),
    RSA_RUNWAY_APPROACH("RSA_RUNWAY_APPROACH"),
    RUNWAY_EXIT("RUNWAY_EXIT"),
    RUNWAY_LOCATION("RUNWAY_LOCATION"),
    RUNWAY_DISTANCE_REMAINING("RUNWAY_DISTANCE_REMAINING"),
    TAXIWAY_DIRECTION("TAXIWAY_DIRECTION"),
    TAXIWAY_END("TAXIWAY_END"),
    TAXIWAY_LOCATION("TAXIWAY_LOCATION"),
    TERMINAL("TERMINAL"),
    TACAN_CHECKPOINT("TACAN_CHECKPOINT"),
    @XmlEnumValue("OTHER:ALL")
    OTHER_ALL("OTHER:ALL");
    private final String value;

    CodeSignBaseType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CodeSignBaseType fromValue(String v) {
        for (CodeSignBaseType c: CodeSignBaseType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
